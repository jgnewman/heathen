#!/usr/bin/env node


var fs       = require('fs'),
    argParse = require('../src/argparser').parse,
    version  = require('../src/compiletechniques').version,
    api      = require('../heathen'),
    bashArgs = process.argv.slice(2),
    usage    = [
        ''
      , '  Usage: heathen [input] [options]'
      , ''
      , '  Input: The path to the file containing Heathen code.'
      , ''
      , '  Options:'
      , ''
      , '    -v, --version          Display the version of heathen.'
      , '    -h, --help             Display help information.'
      , '    -o, --output [file]    The path to the file where you want to place compiled code.'
      , '    -m, --minify           Set this if you want to minify the code.'
      , '    -x, --no-module        Set this if you do not want the output wrapped in a module.'
      , ''
    ].join('\n'),
    args;

/*
 * Create a cleaner object with the user's options
 * and RUN DAT COMPILER!!
 */
function processOptions(argObj) {
  var options = {};

  if (args._noflag) {
    options.input = args._noflag[0];
  }
  if (args['-o']) {
    options.output = args['-o'][0];
  }
  if (args['-m']) {
    options.minify = true;
  }
  if (args['-x']) {
    options.modulize = false;
  }

  return api.compile(options);
}

/*
 * Parse arguments that came in from the command line.
 * See lib/argparser.js for usage details.
 */
args = argParse(bashArgs, [
  ['-v', '--version'],
  ['-h', '--help'],
  ['-o', '--output'],
  ['-m', '--minify'],
  ['-x', '--no-module']
]);

/*
 * Determine what to do based on the arguments we have.
 */
if (args['-v']) {
  console.log(version);
  process.exit(0);

} else if (args['-h']) {
  console.log(usage);
  process.exit(0);

} else {
  processOptions(args);
}
